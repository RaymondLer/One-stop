#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace One_stop
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OneDB")]
	public partial class OneDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertReservation_Detail(Reservation_Detail instance);
    partial void UpdateReservation_Detail(Reservation_Detail instance);
    partial void DeleteReservation_Detail(Reservation_Detail instance);
    partial void InsertCheckout(Checkout instance);
    partial void UpdateCheckout(Checkout instance);
    partial void DeleteCheckout(Checkout instance);
    partial void InsertCheck_In(Check_In instance);
    partial void UpdateCheck_In(Check_In instance);
    partial void DeleteCheck_In(Check_In instance);
    partial void InsertFood_Order(Food_Order instance);
    partial void UpdateFood_Order(Food_Order instance);
    partial void DeleteFood_Order(Food_Order instance);
    partial void InsertReservationBK(ReservationBK instance);
    partial void UpdateReservationBK(ReservationBK instance);
    partial void DeleteReservationBK(ReservationBK instance);
    partial void InsertFoodOrderDetail(FoodOrderDetail instance);
    partial void UpdateFoodOrderDetail(FoodOrderDetail instance);
    partial void DeleteFoodOrderDetail(FoodOrderDetail instance);
    partial void InsertFood_List(Food_List instance);
    partial void UpdateFood_List(Food_List instance);
    partial void DeleteFood_List(Food_List instance);
    #endregion
		
		public OneDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["OneDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OneDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OneDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OneDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OneDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<Reservation_Detail> Reservation_Details
		{
			get
			{
				return this.GetTable<Reservation_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Checkout> Checkouts
		{
			get
			{
				return this.GetTable<Checkout>();
			}
		}
		
		public System.Data.Linq.Table<Check_In> Check_Ins
		{
			get
			{
				return this.GetTable<Check_In>();
			}
		}
		
		public System.Data.Linq.Table<Food_Order> Food_Orders
		{
			get
			{
				return this.GetTable<Food_Order>();
			}
		}
		
		public System.Data.Linq.Table<ReservationBK> ReservationBKs
		{
			get
			{
				return this.GetTable<ReservationBK>();
			}
		}
		
		public System.Data.Linq.Table<FoodOrderDetail> FoodOrderDetails
		{
			get
			{
				return this.GetTable<FoodOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Food_List> Food_Lists
		{
			get
			{
				return this.GetTable<Food_List>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _username;
		
		private string _password;
		
		private string _confirmPass;
		
		private string _email;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<Checkout> _Checkouts;
		
		private EntitySet<ReservationBK> _ReservationBKs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnconfirmPassChanging(string value);
    partial void OnconfirmPassChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Customer()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._Checkouts = new EntitySet<Checkout>(new Action<Checkout>(this.attach_Checkouts), new Action<Checkout>(this.detach_Checkouts));
			this._ReservationBKs = new EntitySet<ReservationBK>(new Action<ReservationBK>(this.attach_ReservationBKs), new Action<ReservationBK>(this.detach_ReservationBKs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmPass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string confirmPass
		{
			get
			{
				return this._confirmPass;
			}
			set
			{
				if ((this._confirmPass != value))
				{
					this.OnconfirmPassChanging(value);
					this.SendPropertyChanging();
					this._confirmPass = value;
					this.SendPropertyChanged("confirmPass");
					this.OnconfirmPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Address", Storage="_Addresses", ThisKey="Id", OtherKey="Customer_ID")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Checkout", Storage="_Checkouts", ThisKey="Id", OtherKey="Customer_ID")]
		public EntitySet<Checkout> Checkouts
		{
			get
			{
				return this._Checkouts;
			}
			set
			{
				this._Checkouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ReservationBK", Storage="_ReservationBKs", ThisKey="Id", OtherKey="customer_ID")]
		public EntitySet<ReservationBK> ReservationBKs
		{
			get
			{
				return this._ReservationBKs;
			}
			set
			{
				this._ReservationBKs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Checkouts(Checkout entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Checkouts(Checkout entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ReservationBKs(ReservationBK entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ReservationBKs(ReservationBK entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _username;
		
		private string _password;
		
		private string _confirmPass;
		
		private string _email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnconfirmPassChanging(string value);
    partial void OnconfirmPassChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmPass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string confirmPass
		{
			get
			{
				return this._confirmPass;
			}
			set
			{
				if ((this._confirmPass != value))
				{
					this.OnconfirmPassChanging(value);
					this.SendPropertyChanging();
					this._confirmPass = value;
					this.SendPropertyChanged("confirmPass");
					this.OnconfirmPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _username;
		
		private string _password;
		
		private string _confirmPass;
		
		private string _email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnconfirmPassChanging(string value);
    partial void OnconfirmPassChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Staff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmPass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string confirmPass
		{
			get
			{
				return this._confirmPass;
			}
			set
			{
				if ((this._confirmPass != value))
				{
					this.OnconfirmPassChanging(value);
					this.SendPropertyChanging();
					this._confirmPass = value;
					this.SendPropertyChanged("confirmPass");
					this.OnconfirmPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User
	{
		
		private string _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private string _role;
		
		public User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this._role = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _AddressLine;
		
		private string _Postcode;
		
		private string _State;
		
		private string _Customer_ID;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressLineChanging(string value);
    partial void OnAddressLineChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCustomer_IDChanging(string value);
    partial void OnCustomer_IDChanged();
    #endregion
		
		public Address()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AddressLine
		{
			get
			{
				return this._AddressLine;
			}
			set
			{
				if ((this._AddressLine != value))
				{
					this.OnAddressLineChanging(value);
					this.SendPropertyChanging();
					this._AddressLine = value;
					this.SendPropertyChanged("AddressLine");
					this.OnAddressLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Address", Storage="_Customer", ThisKey="Customer_ID", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._Customer_ID = value.Id;
					}
					else
					{
						this._Customer_ID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservation_Detail")]
	public partial class Reservation_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _resDetail_iD;
		
		private string _resDetail_type;
		
		private string _reservation_ID;
		
		private EntityRef<ReservationBK> _ReservationBK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnresDetail_iDChanging(string value);
    partial void OnresDetail_iDChanged();
    partial void OnresDetail_typeChanging(string value);
    partial void OnresDetail_typeChanged();
    partial void Onreservation_IDChanging(string value);
    partial void Onreservation_IDChanged();
    #endregion
		
		public Reservation_Detail()
		{
			this._ReservationBK = default(EntityRef<ReservationBK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resDetail_iD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string resDetail_iD
		{
			get
			{
				return this._resDetail_iD;
			}
			set
			{
				if ((this._resDetail_iD != value))
				{
					this.OnresDetail_iDChanging(value);
					this.SendPropertyChanging();
					this._resDetail_iD = value;
					this.SendPropertyChanged("resDetail_iD");
					this.OnresDetail_iDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resDetail_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string resDetail_type
		{
			get
			{
				return this._resDetail_type;
			}
			set
			{
				if ((this._resDetail_type != value))
				{
					this.OnresDetail_typeChanging(value);
					this.SendPropertyChanging();
					this._resDetail_type = value;
					this.SendPropertyChanged("resDetail_type");
					this.OnresDetail_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservation_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string reservation_ID
		{
			get
			{
				return this._reservation_ID;
			}
			set
			{
				if ((this._reservation_ID != value))
				{
					if (this._ReservationBK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreservation_IDChanging(value);
					this.SendPropertyChanging();
					this._reservation_ID = value;
					this.SendPropertyChanged("reservation_ID");
					this.Onreservation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReservationBK_Reservation_Detail", Storage="_ReservationBK", ThisKey="reservation_ID", OtherKey="resID", IsForeignKey=true)]
		public ReservationBK ReservationBK
		{
			get
			{
				return this._ReservationBK.Entity;
			}
			set
			{
				ReservationBK previousValue = this._ReservationBK.Entity;
				if (((previousValue != value) 
							|| (this._ReservationBK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReservationBK.Entity = null;
						previousValue.Reservation_Details.Remove(this);
					}
					this._ReservationBK.Entity = value;
					if ((value != null))
					{
						value.Reservation_Details.Add(this);
						this._reservation_ID = value.resID;
					}
					else
					{
						this._reservation_ID = default(string);
					}
					this.SendPropertyChanged("ReservationBK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Checkout")]
	public partial class Checkout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _paymentID;
		
		private decimal _totalPrice;
		
		private System.DateTime _paymentDate;
		
		private string _Customer_ID;
		
		private string _foodID;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Food_Order> _Food_Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpaymentIDChanging(string value);
    partial void OnpaymentIDChanged();
    partial void OntotalPriceChanging(decimal value);
    partial void OntotalPriceChanged();
    partial void OnpaymentDateChanging(System.DateTime value);
    partial void OnpaymentDateChanged();
    partial void OnCustomer_IDChanging(string value);
    partial void OnCustomer_IDChanged();
    partial void OnfoodIDChanging(string value);
    partial void OnfoodIDChanged();
    #endregion
		
		public Checkout()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Food_Order = default(EntityRef<Food_Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string paymentID
		{
			get
			{
				return this._paymentID;
			}
			set
			{
				if ((this._paymentID != value))
				{
					this.OnpaymentIDChanging(value);
					this.SendPropertyChanging();
					this._paymentID = value;
					this.SendPropertyChanged("paymentID");
					this.OnpaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPrice", DbType="Decimal(12,2) NOT NULL")]
		public decimal totalPrice
		{
			get
			{
				return this._totalPrice;
			}
			set
			{
				if ((this._totalPrice != value))
				{
					this.OntotalPriceChanging(value);
					this.SendPropertyChanging();
					this._totalPrice = value;
					this.SendPropertyChanged("totalPrice");
					this.OntotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime paymentDate
		{
			get
			{
				return this._paymentDate;
			}
			set
			{
				if ((this._paymentDate != value))
				{
					this.OnpaymentDateChanging(value);
					this.SendPropertyChanging();
					this._paymentDate = value;
					this.SendPropertyChanged("paymentDate");
					this.OnpaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					if (this._Food_Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfoodIDChanging(value);
					this.SendPropertyChanging();
					this._foodID = value;
					this.SendPropertyChanged("foodID");
					this.OnfoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Checkout", Storage="_Customer", ThisKey="Customer_ID", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Checkouts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Checkouts.Add(this);
						this._Customer_ID = value.Id;
					}
					else
					{
						this._Customer_ID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Order_Checkout", Storage="_Food_Order", ThisKey="foodID", OtherKey="foodID", IsForeignKey=true)]
		public Food_Order Food_Order
		{
			get
			{
				return this._Food_Order.Entity;
			}
			set
			{
				Food_Order previousValue = this._Food_Order.Entity;
				if (((previousValue != value) 
							|| (this._Food_Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food_Order.Entity = null;
						previousValue.Checkouts.Remove(this);
					}
					this._Food_Order.Entity = value;
					if ((value != null))
					{
						value.Checkouts.Add(this);
						this._foodID = value.foodID;
					}
					else
					{
						this._foodID = default(string);
					}
					this.SendPropertyChanged("Food_Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_In")]
	public partial class Check_In : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _check_code;
		
		private string _check_type;
		
		private string _check_status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncheck_codeChanging(string value);
    partial void Oncheck_codeChanged();
    partial void Oncheck_typeChanging(string value);
    partial void Oncheck_typeChanged();
    partial void Oncheck_statusChanging(string value);
    partial void Oncheck_statusChanged();
    #endregion
		
		public Check_In()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_code", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string check_code
		{
			get
			{
				return this._check_code;
			}
			set
			{
				if ((this._check_code != value))
				{
					this.Oncheck_codeChanging(value);
					this.SendPropertyChanging();
					this._check_code = value;
					this.SendPropertyChanged("check_code");
					this.Oncheck_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string check_type
		{
			get
			{
				return this._check_type;
			}
			set
			{
				if ((this._check_type != value))
				{
					this.Oncheck_typeChanging(value);
					this.SendPropertyChanging();
					this._check_type = value;
					this.SendPropertyChanged("check_type");
					this.Oncheck_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string check_status
		{
			get
			{
				return this._check_status;
			}
			set
			{
				if ((this._check_status != value))
				{
					this.Oncheck_statusChanging(value);
					this.SendPropertyChanging();
					this._check_status = value;
					this.SendPropertyChanged("check_status");
					this.Oncheck_statusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Food_Order")]
	public partial class Food_Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _foodID;
		
		private EntitySet<Checkout> _Checkouts;
		
		private EntitySet<FoodOrderDetail> _FoodOrderDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfoodIDChanging(string value);
    partial void OnfoodIDChanged();
    #endregion
		
		public Food_Order()
		{
			this._Checkouts = new EntitySet<Checkout>(new Action<Checkout>(this.attach_Checkouts), new Action<Checkout>(this.detach_Checkouts));
			this._FoodOrderDetails = new EntitySet<FoodOrderDetail>(new Action<FoodOrderDetail>(this.attach_FoodOrderDetails), new Action<FoodOrderDetail>(this.detach_FoodOrderDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					this.OnfoodIDChanging(value);
					this.SendPropertyChanging();
					this._foodID = value;
					this.SendPropertyChanged("foodID");
					this.OnfoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Order_Checkout", Storage="_Checkouts", ThisKey="foodID", OtherKey="foodID")]
		public EntitySet<Checkout> Checkouts
		{
			get
			{
				return this._Checkouts;
			}
			set
			{
				this._Checkouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Order_FoodOrderDetail", Storage="_FoodOrderDetails", ThisKey="foodID", OtherKey="OrderId")]
		public EntitySet<FoodOrderDetail> FoodOrderDetails
		{
			get
			{
				return this._FoodOrderDetails;
			}
			set
			{
				this._FoodOrderDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Checkouts(Checkout entity)
		{
			this.SendPropertyChanging();
			entity.Food_Order = this;
		}
		
		private void detach_Checkouts(Checkout entity)
		{
			this.SendPropertyChanging();
			entity.Food_Order = null;
		}
		
		private void attach_FoodOrderDetails(FoodOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Food_Order = this;
		}
		
		private void detach_FoodOrderDetails(FoodOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Food_Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReservationBK")]
	public partial class ReservationBK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _resID;
		
		private int _resHeadCount;
		
		private string _resArea;
		
		private System.DateTime _resDate;
		
		private string _customer_ID;
		
		private EntitySet<Reservation_Detail> _Reservation_Details;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnresIDChanging(string value);
    partial void OnresIDChanged();
    partial void OnresHeadCountChanging(int value);
    partial void OnresHeadCountChanged();
    partial void OnresAreaChanging(string value);
    partial void OnresAreaChanged();
    partial void OnresDateChanging(System.DateTime value);
    partial void OnresDateChanged();
    partial void Oncustomer_IDChanging(string value);
    partial void Oncustomer_IDChanged();
    #endregion
		
		public ReservationBK()
		{
			this._Reservation_Details = new EntitySet<Reservation_Detail>(new Action<Reservation_Detail>(this.attach_Reservation_Details), new Action<Reservation_Detail>(this.detach_Reservation_Details));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string resID
		{
			get
			{
				return this._resID;
			}
			set
			{
				if ((this._resID != value))
				{
					this.OnresIDChanging(value);
					this.SendPropertyChanging();
					this._resID = value;
					this.SendPropertyChanged("resID");
					this.OnresIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resHeadCount", DbType="Int NOT NULL")]
		public int resHeadCount
		{
			get
			{
				return this._resHeadCount;
			}
			set
			{
				if ((this._resHeadCount != value))
				{
					this.OnresHeadCountChanging(value);
					this.SendPropertyChanging();
					this._resHeadCount = value;
					this.SendPropertyChanged("resHeadCount");
					this.OnresHeadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resArea", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string resArea
		{
			get
			{
				return this._resArea;
			}
			set
			{
				if ((this._resArea != value))
				{
					this.OnresAreaChanging(value);
					this.SendPropertyChanging();
					this._resArea = value;
					this.SendPropertyChanged("resArea");
					this.OnresAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resDate", DbType="DateTime NOT NULL")]
		public System.DateTime resDate
		{
			get
			{
				return this._resDate;
			}
			set
			{
				if ((this._resDate != value))
				{
					this.OnresDateChanging(value);
					this.SendPropertyChanging();
					this._resDate = value;
					this.SendPropertyChanged("resDate");
					this.OnresDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string customer_ID
		{
			get
			{
				return this._customer_ID;
			}
			set
			{
				if ((this._customer_ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._customer_ID = value;
					this.SendPropertyChanged("customer_ID");
					this.Oncustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReservationBK_Reservation_Detail", Storage="_Reservation_Details", ThisKey="resID", OtherKey="reservation_ID")]
		public EntitySet<Reservation_Detail> Reservation_Details
		{
			get
			{
				return this._Reservation_Details;
			}
			set
			{
				this._Reservation_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ReservationBK", Storage="_Customer", ThisKey="customer_ID", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ReservationBKs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ReservationBKs.Add(this);
						this._customer_ID = value.Id;
					}
					else
					{
						this._customer_ID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservation_Details(Reservation_Detail entity)
		{
			this.SendPropertyChanging();
			entity.ReservationBK = this;
		}
		
		private void detach_Reservation_Details(Reservation_Detail entity)
		{
			this.SendPropertyChanging();
			entity.ReservationBK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FoodOrderDetail")]
	public partial class FoodOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderId;
		
		private string _Id;
		
		private string _foodName;
		
		private string _quantity;
		
		private EntityRef<Food_Order> _Food_Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(string value);
    partial void OnOrderIdChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnfoodNameChanging(string value);
    partial void OnfoodNameChanged();
    partial void OnquantityChanging(string value);
    partial void OnquantityChanged();
    #endregion
		
		public FoodOrderDetail()
		{
			this._Food_Order = default(EntityRef<Food_Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Food_Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string foodName
		{
			get
			{
				return this._foodName;
			}
			set
			{
				if ((this._foodName != value))
				{
					this.OnfoodNameChanging(value);
					this.SendPropertyChanging();
					this._foodName = value;
					this.SendPropertyChanged("foodName");
					this.OnfoodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Order_FoodOrderDetail", Storage="_Food_Order", ThisKey="OrderId", OtherKey="foodID", IsForeignKey=true)]
		public Food_Order Food_Order
		{
			get
			{
				return this._Food_Order.Entity;
			}
			set
			{
				Food_Order previousValue = this._Food_Order.Entity;
				if (((previousValue != value) 
							|| (this._Food_Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food_Order.Entity = null;
						previousValue.FoodOrderDetails.Remove(this);
					}
					this._Food_Order.Entity = value;
					if ((value != null))
					{
						value.FoodOrderDetails.Add(this);
						this._OrderId = value.foodID;
					}
					else
					{
						this._OrderId = default(string);
					}
					this.SendPropertyChanged("Food_Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Food_List")]
	public partial class Food_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _foodID;
		
		private string _foodName;
		
		private decimal _foodPrice;
		
		private string _foodPhoto;
		
		private string _foodStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfoodIDChanging(string value);
    partial void OnfoodIDChanged();
    partial void OnfoodNameChanging(string value);
    partial void OnfoodNameChanged();
    partial void OnfoodPriceChanging(decimal value);
    partial void OnfoodPriceChanged();
    partial void OnfoodPhotoChanging(string value);
    partial void OnfoodPhotoChanged();
    partial void OnfoodStatusChanging(string value);
    partial void OnfoodStatusChanged();
    #endregion
		
		public Food_List()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					this.OnfoodIDChanging(value);
					this.SendPropertyChanging();
					this._foodID = value;
					this.SendPropertyChanged("foodID");
					this.OnfoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string foodName
		{
			get
			{
				return this._foodName;
			}
			set
			{
				if ((this._foodName != value))
				{
					this.OnfoodNameChanging(value);
					this.SendPropertyChanging();
					this._foodName = value;
					this.SendPropertyChanged("foodName");
					this.OnfoodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodPrice", DbType="Decimal(12,2) NOT NULL")]
		public decimal foodPrice
		{
			get
			{
				return this._foodPrice;
			}
			set
			{
				if ((this._foodPrice != value))
				{
					this.OnfoodPriceChanging(value);
					this.SendPropertyChanging();
					this._foodPrice = value;
					this.SendPropertyChanged("foodPrice");
					this.OnfoodPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodPhoto", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string foodPhoto
		{
			get
			{
				return this._foodPhoto;
			}
			set
			{
				if ((this._foodPhoto != value))
				{
					this.OnfoodPhotoChanging(value);
					this.SendPropertyChanging();
					this._foodPhoto = value;
					this.SendPropertyChanged("foodPhoto");
					this.OnfoodPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string foodStatus
		{
			get
			{
				return this._foodStatus;
			}
			set
			{
				if ((this._foodStatus != value))
				{
					this.OnfoodStatusChanging(value);
					this.SendPropertyChanging();
					this._foodStatus = value;
					this.SendPropertyChanged("foodStatus");
					this.OnfoodStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
